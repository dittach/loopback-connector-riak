<?xml version="1.0" encoding="UTF-8" ?>
<schema name="address" version="1.5">
  <fields>
    <!-- Start customized fields here -->
    <field name="id"    type="string_ci" indexed="true" stored="true" />
    <field name="name"  type="string_ci" indexed="true" stored="true" />
    <field name="notes" type="string_ci" indexed="true" stored="true" />

    <!-- Riak datatypes default fields-->
    <field name="counter" type="int"    indexed="true" stored="true" multiValued="false" />
    <field name="set"     type="string" indexed="true" stored="false" multiValued="true" />

    <!-- Riak datatypes embedded fields -->
    <dynamicField name="*_flag"     type="boolean" indexed="true" stored="true" multiValued="false" />
    <dynamicField name="*_counter"  type="int"     indexed="true" stored="true" multiValued="false" />
    <dynamicField name="*_register" type="string"  indexed="true" stored="true" multiValued="false" />
    <dynamicField name="*_set"      type="string"  indexed="true" stored="false" multiValued="true" />

    <!-- catch-all field to prevent errors for queries that don't match the index -->
    <dynamicField name="*" type="ignored" />

    <field name="_yz_id"   type="_yz_str" indexed="true" stored="true"  multiValued="false" required="true"/>
    <field name="_yz_ed"   type="_yz_str" indexed="true" stored="false" multiValued="false"/>
    <field name="_yz_pn"   type="_yz_str" indexed="true" stored="false" multiValued="false"/>
    <field name="_yz_fpn"  type="_yz_str" indexed="true" stored="false" multiValued="false"/>
    <field name="_yz_vtag" type="_yz_str" indexed="true" stored="false" multiValued="false"/>
    <field name="_yz_rk"   type="_yz_str" indexed="true" stored="true"  multiValued="false"/>
    <field name="_yz_rt"   type="_yz_str" indexed="true" stored="true"  multiValued="false"/>
    <field name="_yz_rb"   type="_yz_str" indexed="true" stored="true"  multiValued="false"/>
    <field name="_yz_err"  type="_yz_str" indexed="true" stored="false" multiValued="false"/>
  </fields>

  <uniqueKey>_yz_id</uniqueKey>

  <types>
    <fieldType name="_yz_str" class="solr.StrField" sortMissingLast="true" />

    <!-- case insensitive string matching -->
    <fieldType name="string_ci" class="solr.TextField"
               sortMissingLast="true" omitNorms="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>

    <fieldType name="string"  class="solr.StrField"  sortMissingLast="true" />
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>

    <fieldtype name="ignored" class="solr.StrField"  stored="false" indexed="false" multiValued="true" />

    <fieldType name="int"     class="solr.TrieIntField"  precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="tint"    class="solr.TrieIntField"  precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tdate"   class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>

    <!-- A general text field that has reasonable, generic
    cross-language defaults: it tokenizes with StandardTokenizer,
    removes stop words from case-insensitive "stopwords.txt" (empty by
    default), and down cases.  At query time only, it also applies
    synonyms. -->
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
  </types>
</schema>
